{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.jsx","components/seach-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","props","monsters","map","SearchBox","placeholder","getInputValue","type","onChange","e","App","setState","searchField","target","value","state","fetch","then","res","json","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";mSAIe,SAASA,EAAT,GAA0B,IAAXC,EAAU,EAAVA,QAC1B,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,W,MCLT,SAASC,EAASC,GAC7B,OACI,qBAAKP,UAAU,YAAf,SACKO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OACvB,cAACD,EAAD,CAAuBC,QAASA,GAArBA,EAAQI,S,MCLpB,SAASO,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,cAC7C,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAU,SAAAC,GAAC,OAAIH,EAAcG,M,UCyC1BC,EAzCf,kDAEI,aAAc,IAAD,8BACT,gBAcJJ,cAAgB,SAACG,GACb,EAAKE,SAAS,CAAEC,YAAaH,EAAEI,OAAOC,SAdtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IAJR,EAFjB,qDAUI,WAAoB,IAAD,OACfI,MAAM,8CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAI,EAAKP,SAAS,CAACT,SAAUgB,SAblD,oBAqBI,WAEI,MAAgCE,KAAKL,MAA9Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YAEXS,EAAkBnB,EAASoB,QAC7B,SAAA7B,GAAO,OAAIA,EAAQK,KAAKyB,cAAcC,SAASZ,EAAYW,kBAG/D,OACI,sBAAK7B,UAAU,MAAf,UACI,wCACA,cAACU,EAAD,CACIC,YAAY,cACZC,cAAec,KAAKd,gBACxB,cAACN,EAAD,CAAUE,SAAUU,EAAcS,EAAiBnB,WAnCnE,GAAyBuB,aCGVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.610f0974.chunk.js","sourcesContent":["import React from 'react'\nimport './card.style.css'\n\n\nexport default function Card({monster}) {\n    return (\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\n            <h2>{monster.name}</h2>\n            <p>{monster.email}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport Card from '../card/card.component'\nimport './card-list.style.css'\n\nexport default function CardList(props) {\n    return (\n        <div className='card-list'>\n            {props.monsters.map(monster => (\n                <Card key={monster.id} monster={monster}/>\n            ))}\n        </div>\n    )\n}\n","import React from 'react'\nimport './search-box.style.css'\n\nexport default function SearchBox({ placeholder, getInputValue}) {\n    return (\n        <input \n            className='search'\n            type=\"search\" \n            placeholder={placeholder}\n            onChange={e => getInputValue(e)}/>\n    )\n}\n","import React, { Component } from 'react'\n\nimport CardList from './components/card-list/card-list.component'\nimport SearchBox from './components/seach-box/search-box.component'\n\nimport './App.css'\n\n\n\nexport class App extends Component {\n    \n    constructor(){\n        super()\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then(res => this.setState({monsters: res}))\n    }\n\n    // arow function for this || bind this in constructor  \n    getInputValue = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    render() {\n        // destruckturization\n        const {monsters, searchField} = this.state\n        //! filter monster arr by input value\n        const filteredMonster = monsters.filter(\n            monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n\n        return (\n            <div className='app'>\n                <h1>Robots</h1>\n                <SearchBox \n                    placeholder=\"robots name\" \n                    getInputValue={this.getInputValue} />\n                <CardList monsters={searchField ? filteredMonster: monsters}/>\n            </div>\n        )\n    }\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}